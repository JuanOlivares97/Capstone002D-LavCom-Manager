generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model articulo {
  id_articulo      Int     @id @default(autoincrement())
  nombre_articulo  String  @unique(map: "unique_nombre_articulo") @db.VarChar(255)
  stock            Int
  id_subgrupo_ropa Int
  borrado          Boolean

  @@index([id_subgrupo_ropa], map: "articulo_subgrupo_ropa")
}

model detalle_registro {
  id_detalle_registro Int @id @default(autoincrement())
  cantidad            Int
  id_articulo         Int
  id_registro         Int

  @@index([id_articulo], map: "fk_detalle_registro_articulo_idx")
  @@index([id_registro], map: "id_registro")
}

model estamento {
  id_estamento   Int    @id @default(autoincrement())
  desc_estamento String @unique(map: "unique_estamento") @db.VarChar(255)
}

model registro {
  id_registro      Int            @id @default(autoincrement())
  rut_usuario_1    Int
  rut_usuario_2    Int?
  id_unidad_sigcom Int?
  cantidad_total   Int
  fecha            DateTime       @default(now()) @db.Timestamp(0)
  observacion      String?        @db.VarChar(500)
  id_tipo_registro Int
  unidad_sigcom    unidad_sigcom? @relation(fields: [id_unidad_sigcom], references: [id_unidad_sigcom], onDelete: Restrict, onUpdate: Restrict, map: "registro_ibfk_1")

  @@index([rut_usuario_1], map: "fk_registro_usuario1_idx")
  @@index([rut_usuario_2], map: "fk_registro_usuario2_idx")
  @@index([id_tipo_registro], map: "id_tipo_registro")
  @@index([id_unidad_sigcom], map: "fk_id_unidad_sigcom")
}

model servicio {
  id_servicio   Int     @id
  desc_servicio String  @unique(map: "unique_descripcion") @db.VarChar(255)
  habilitado    Boolean
}

model subgrupo_ropa {
  id_subgrupo_ropa Int    @id
  desc_subgrupo    String @unique(map: "unique_desc_subgrupo") @db.VarChar(255)
}

model tipo_contrato {
  id_tipo_contrato Int    @id
  tipo_contrato    String @unique(map: "unique_tipo_contrato") @db.VarChar(255)
}

model tipo_registro {
  id_tipo_registro Int    @id
  tipo_registro    String @db.VarChar(255)
}

model tipo_usuario {
  id_tipo_usuario Int    @id
  tipo_usuario    String @db.VarChar(255)
}

model unidad_sigcom {
  id_unidad_sigcom Int        @id
  unidad_sigcom    String     @unique(map: "uniqueUnidadSigcom") @db.VarChar(255)
  registro         registro[]

  @@index([id_unidad_sigcom], map: "id_unidad_sigcom")
}

model usuarios {
  id_usuario       Int     @id @default(autoincrement())
  rut_usuario      Int     @unique(map: "rut_usuario_UNIQUE")
  dv_usuario       String  @db.VarChar(1)
  nombre           String  @db.VarChar(255)
  id_servicio      Int
  id_tipo_contrato Int
  id_unidad_sigcom Int
  id_estamento     Int
  id_tipo_usuario  Int
  username         String  @unique(map: "username_UNIQUE") @db.VarChar(255)
  pwd              String  @db.VarChar(255)
  borrado          Boolean

  @@index([id_tipo_usuario], map: "fk_tipo_usuario")
  @@index([id_estamento], map: "usuario_estamento")
  @@index([id_servicio], map: "usuario_servicio")
  @@index([id_tipo_contrato], map: "usuario_tipo_contrato")
  @@index([id_unidad_sigcom], map: "usuario_unidad_sigcom")
}
