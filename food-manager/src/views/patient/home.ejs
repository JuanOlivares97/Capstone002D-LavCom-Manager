<%- include('../components/modals/patients/addPatientModal') %>
    <!-- Modal para mostrar información del paciente -->
    <%- include('../components/modals/patients/infoPatientModal') %>
        <%- include('../components/modals/patients/AltaModal') %>
            <script src="/food-manager/js/patient/infoModal.js" defer></script>
            <script src="/food-manager/js/patient/openModal.js" defer></script>
            <script src="/food-manager/js/patient/addPatient.js" defer></script>
            <script src="/food-manager/js/patient/altaModal.js" defer></script>
            <script src="/food-manager/js/patient/utils.js" defer></script>
            <!-- Secciones de navegación -->
            <!-- Botón para alternar la visibilidad de las unidades -->
            <!-- Contenedor del overlay (cubrirá toda la pantalla) -->
            <div id="overlay" class="fixed inset-0 z-40 hidden bg-black bg-opacity-50" onclick="closeSidebar()"></div>

            <!-- Contenedor del sidebar -->
            <div id="sidebarUnits"
                class="fixed top-0 right-0 z-50 h-full transition-transform duration-300 ease-in-out transform translate-x-full bg-white shadow-xl w-80">
                <div class="flex items-center justify-between p-4 border-b">
                    <h2 class="text-lg font-bold text-gray-700">Servicios</h2>
                    <button onclick="closeSidebar()" class="text-gray-700 hover:text-red-600">
                        &times; <!-- Icono de cerrar -->
                    </button>
                </div>
                <!-- Contenedor de las unidades con scroll -->
                <div class="p-4">
                    <input type="text" id="filterInput" 
                           class="w-full px-4 py-2 mb-4 border rounded" 
                           placeholder="Buscar unidad..." 
                           oninput="filterByUnitName()">
                </div>
                <div class="p-4 overflow-y-auto h-[calc(100%-4rem)]">
                    <% servicios.forEach(servicio => { %>
                        <label class="block px-4 py-2 my-1 text-gray-700 rounded hover:bg-indigo-500 hover:text-white item"
                               data-name="<%= servicio.DescTipoServicio.toLowerCase() %>">
                            <%= servicio.DescTipoServicio %>
                        </label>
                    <% }) %>
                </div>
            </div>

            <!-- Barra de búsqueda y agregar paciente -->
            <div class="p-6 mx-4">
                <div class="grid grid-cols-1 gap-6 lg:grid-cols-4">
                    <!-- Botón Ingresar Paciente -->
                    <div >
                        <button id="addPatient" 
                            class="flex items-center justify-center w-full gap-2 p-3 text-white transition duration-300 bg-indigo-500 rounded-lg shadow-md hover:bg-indigo-600">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"
                                class="w-5 h-5">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                            </svg>
                            <span class="font-medium">Ingresar Paciente</span>
                        </button>
                    </div>

                    <!-- Buscador por Nombre -->
                    <div class="lg:col-span-2">
                        <form onsubmit="searchByName(event)" class="flex">
                            <input type="text" id="searchQuery" placeholder="Buscar pacientes por nombre..." required
                                class="w-full px-4 py-2 border border-gray-300 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-indigo-500"
                                aria-label="Buscar">
                            <button type="submit"
                                class="px-6 text-white transition duration-300 bg-indigo-500 rounded-lg hover:bg-indigo-600">
                                <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                                </svg>
                            </button>
                        </form>
                    </div>

                    <!-- Buscador por RUT -->
                    <div>
                        <div class="flex">
                            <input type="text" id="rutInput" placeholder="Buscar por RUT (11111111-1)"
                                class="w-full px-4 py-2 border border-indigo-300 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-indigo-500"
                                oninput="formatRut(this)">
                            <button onclick="searchByRut()"
                                class="px-6 text-white transition duration-300 bg-indigo-500 rounded-lg hover:bg-indigo-600">
                                <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Botones de Filtro -->
                <div class="flex justify-end gap-4 mt-6">
                    <button onclick="openSidebar()"
                        class="flex items-center gap-2 px-4 py-2 text-white transition duration-300 bg-indigo-500 rounded-lg shadow-md hover:bg-indigo-600">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
                        </svg>
                        Filtrar por Servicio
                    </button>
                    <button onclick="clearFilters()"
                        class="flex items-center gap-2 px-4 py-2 text-white transition duration-300 bg-indigo-500 rounded-lg shadow-md hover:bg-indigo-600">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                        Limpiar filtros
                    </button>
                </div>
            </div>

            <!-- KPI: Pacientes Hospitalizados -->
            <div class="grid grid-cols-1 gap-5 p-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
                <div class="p-6 bg-white rounded-lg shadow-md">
                    <h2 class="mb-2 text-xl font-semibold text-gray-800">Pacientes Hospitalizados</h2>
                    <p class="text-3xl font-bold text-purple-600">
                        <%= pacientesHospitalizados %>
                    </p>
                    <p class="text-sm text-gray-600">Total hospitalizados</p>
                </div>

                <!-- KPI: Pacientes en Ayuno -->
                <div class="p-6 bg-white rounded-lg shadow-md">
                    <h2 class="mb-2 text-xl font-semibold text-gray-800">Pacientes en Ayuno</h2>
                    <p class="text-3xl font-bold text-red-600">
                        <%= pacientesEnAyuno %>
                    </p>
                    <p class="text-sm text-gray-600">En ayuno hoy</p>
                </div>

                <!-- KPI: Ingresos del Día -->
                <div class="p-6 bg-white rounded-lg shadow-md">
                    <h2 class="mb-2 text-xl font-semibold text-gray-800">Ingresos del Día</h2>
                    <p class="text-3xl font-bold text-indigo-600">
                        <%= ingresosHoy %>
                    </p>
                    <p class="text-sm text-gray-600">Nuevos ingresos hoy</p>
                </div>

                <!-- KPI: Altas del Día -->
                <div class="p-6 bg-white rounded-lg shadow-md">
                    <h2 class="mb-2 text-xl font-semibold text-gray-800">Altas del Día</h2>
                    <p class="text-3xl font-bold text-pink-600">
                        <%= altasHoy %>
                    </p>
                    <p class="text-sm text-gray-600">Pacientes dados de alta hoy</p>
                </div>
            </div>
            <!-- Contenedor de pacientes -->

            <div id="cardGridPacientes"
                class="grid grid-cols-1 gap-5 p-6 md:grid-cols-3">
                <% pacientes.forEach(paciente=> { %>
                    <div class="relative z-0 p-5 transition-transform duration-300 ease-in-out bg-white rounded-lg shadow-lg cursor-pointer hover:transform hover:-translate-y-1"
                        data-unidad="<%= paciente.IdTipoServicio %>"
                        onclick='openModalInfo(<%= JSON.stringify(paciente) %>); event.stopPropagation();'>

                        <!-- Icono de Ayuno en la esquina superior derecha -->
                        <div class="relative">
                            <% if (paciente.enAyuno===true) { %>
                                <div id="fastingIcon-<%= paciente.IdHospitalizado %>"
                                    class="absolute top-0 right-0 p-2">
                                    <%- include('../icons/enAyuno') %>
                                </div>
                                <% } else { %>
                                    <div id="fastingIcon-<%= paciente.IdHospitalizado %>"
                                        class="absolute top-0 right-0 hidden p-2">
                                        <%- include('../icons/enAyuno') %>
                                    </div>
                                    <% } %>
                        </div>

                        <!-- Patient Details -->
                        <h2 class="mb-2 text-xl font-bold text-gray-800">
                            <%= paciente.nombreCompleto %> 
                        </h2>
                        <span id="rutSpan">
                            <%= paciente.RutHospitalizado %>-<%= paciente.DvHospitalizado %>
                        </span>
                        <p class="text-gray-600">Edad: <%= paciente.edad %>
                        </p>
                        <p class="text-gray-600">Régimen: <%= paciente.TipoRegimen.DescTipoRegimen %>
                        </p>
                        <p class="text-gray-600">Observaciones: <%= paciente.ObservacionesNutricionista %>
                        </p>

                        <!-- Fasting Date Information -->
                        <div id="fastingDate-<%= paciente.IdHospitalizado %>" class="text-sm text-gray-600">
                            <% if (paciente.enAyuno===true) { %>
                                <% 
                                    // Convert FechaFinAyuno to Date object
                                    const fastingDate = new Date(paciente.FechaFinAyuno); 
                                    
                                    // Format the date as DD MM AAAA HH
                                    const options = { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' };
                                    const formattedDate = new Intl.DateTimeFormat('es-ES', options).format(fastingDate);
                                %>
                                Ayuno hasta: <%= formattedDate %>
                            <% } else { %>
                                No en ayuno
                            <% } %>
                        </div>

                        <!-- Action Buttons -->
                        <div class="my-2">
                            <!-- Botón Dar Alta -->
                            <button class="w-full px-4 py-2 my-1 bg-blue-200 rounded-md shadow-sm hover:bg-blue-300"
                                onclick="darAltaPaciente(<%= JSON.stringify(paciente) %>); event.stopPropagation();">
                                Dar Alta
                            </button>

                            <% if (paciente.enAyuno===false) { %>
                                <!-- Button to trigger the fasting date modal with SweetAlert -->
                            <button onclick="indicateFasting(<%= paciente.IdHospitalizado %>); event.stopPropagation();"
                                class="w-full px-4 py-2 my-1 bg-blue-200 rounded-md shadow-sm hover:bg-blue-300">
                                Indicar Ayuno
                            </button>
                            <% } else { %>
                            <!-- Botón para quitar ayuno -->
    <button onclick="removeFasting(<%= paciente.IdHospitalizado %>); event.stopPropagation();"
        class="w-full px-4 py-2 my-1 bg-red-200 rounded-md shadow-sm hover:bg-red-300">
        Quitar Ayuno
    </button>
                                <% } %>
                        </div>
                    </div>
                    <% }) %>

            </div>



            <script>
                function openSidebar() {
                    const sidebar = document.getElementById('sidebarUnits');
                    const overlay = document.getElementById('overlay');
                    sidebar.classList.remove('translate-x-full');
                    sidebar.classList.add('translate-x-0');
                    overlay.classList.remove('hidden');
                    overlay.classList.add('block');
                }

                function closeSidebar() {
                    const sidebar = document.getElementById('sidebarUnits');
                    const overlay = document.getElementById('overlay');
                    sidebar.classList.remove('translate-x-0');
                    sidebar.classList.add('translate-x-full');
                    overlay.classList.remove('block');
                    overlay.classList.add('hidden');
                }

                // Function to toggle the specific calendar popover within the clicked card
                function toggleCalendarPopover(event, button) {
                    event.stopPropagation(); // Prevents the click from propagating to other elements
                    const popover = button.nextElementSibling; // Finds the popover within the same card
                    popover.classList.toggle('hidden');
                }

                // Function to close the specific calendar popover
                function closeCalendarPopover(event, button) {
                    event.stopPropagation();
                    const popover = button.closest('.calendarPopover'); // Finds the popover in the current card
                    popover.classList.add('hidden');
                }

                // Close the popover if clicking outside any of the popovers
                document.addEventListener('click', function (event) {
                    document.querySelectorAll('.calendarPopover').forEach(popover => {
                        if (!popover.contains(event.target) && !popover.previousElementSibling.contains(event.target)) {
                            popover.classList.add('hidden');
                        }
                    });
                });

                // Function to open SweetAlert modal and send fasting date to the server
                // Function to open SweetAlert modal with a date picker and send fasting date to the server
                async function indicateFasting(idPaciente) {
    const { value: fastingDate } = await Swal.fire({
        title: 'Seleccione la fecha de ayuno',
        html: `<input type="datetime-local" id="fastingDateInput" class="swal2-input" placeholder="aaaa-mm-dd" required>`,
        focusConfirm: false,
        showCancelButton: true,
        confirmButtonText: 'Confirmar',
        cancelButtonText: 'Cancelar',
        preConfirm: () => {
            const fastingDateValue = document.getElementById('fastingDateInput').value;
            if (!fastingDateValue) {
                Swal.showValidationMessage('Debe seleccionar una fecha');
                return false;
            }
            return fastingDateValue;
        },
    });

    if (fastingDate) {
        try {
            const response = await fetch(`/food-manager/patient/change-fasting-date/${idPaciente}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ fastingDate }),
            });

            const data = await response.json();
            if (response.ok) {
                Swal.fire('Éxito', data.message, 'success');
                location.reload(); // Refrescar la página o actualizar dinámicamente el DOM
            } else {
                Swal.fire('Error', data.message, 'error');
            }
        } catch (error) {
            Swal.fire('Error', 'Hubo un problema al indicar ayuno', 'error');
        }
    }
}


async function removeFasting(idPaciente) {
    const confirm = await Swal.fire({
        title: '¿Está seguro?',
        text: 'Esto quitará el estado de ayuno del paciente',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Sí, quitar',
        cancelButtonText: 'Cancelar',
    });

    if (confirm.isConfirmed) {
        try {
            const response = await fetch(`/food-manager/patient/remove-fasting/${idPaciente}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
            });

            const data = await response.json();
            if (response.ok) {
                Swal.fire('Éxito', data.message, 'success');
                location.reload(); // Refrescar la página o actualizar dinámicamente el DOM
            } else {
                Swal.fire('Error', data.message, 'error');
            }
        } catch (error) {
            Swal.fire('Error', 'Hubo un problema al quitar ayuno '+error, 'error');
        }
    }
}

            </script>